/* CIF PROCESS (250, 147), (150, 75) */
process Actuator;
    /* CIF TEXT (419, 272), (267, 188) */
    -- Text area for declarations and comments
    
    dcl my_union MyUnion;
    dcl my_union_det Myunion_selection;
    dcl my_bool MyBoolean;
    dcl my_array MyArray;
    dcl my_derived_array MyDerivedArray;
    dcl my_int MyInteger;
    dcl my_struct MyStruct;
    dcl my_enum MyEnum;
    dcl my_fixed MyFixed;
    dcl my_derived_fixed MyDerivedFixed;
    /* CIF ENDTEXT */
    /* CIF START (324, 12), (70, 35) */
    START;
        /* CIF NEXTSTATE (324, 62), (70, 35) */
        NEXTSTATE Wait;
    /* CIF state (2096, 79), (70, 35) */
    state Wait;
        /* CIF input (2036, 134), (189, 35) */
        input test_length_fixed(my_fixed);
            /* CIF task (2039, 189), (181, 35) */
            task my_int := length(my_fixed);
            /* CIF output (2066, 244), (127, 35) */
            output result_int(my_int);
    endstate;
    /* CIF state (2074, 487), (70, 35) */
    state Wait;
        /* CIF input (2046, 542), (117, 35) */
        input test_val(my_int);
            /* CIF task (1996, 597), (218, 35) */
            task my_enum := val(my_int, MyEnum);
            /* CIF output (2024, 652), (162, 35) */
            output result_enum(my_enum);
            /* CIF NEXTSTATE (2070, 707), (70, 35) */
            NEXTSTATE Wait;
    endstate;
    /* CIF state (1603, 413), (70, 35) */
    state Wait;
        /* CIF input (1561, 468), (144, 35) */
        input test_num(my_enum);
            /* CIF task (1548, 523), (170, 35) */
            task my_int := num(my_enum);
            /* CIF output (1570, 578), (127, 35) */
            output result_int(my_int);
            /* CIF NEXTSTATE (1599, 633), (70, 35) */
            NEXTSTATE Wait;
    endstate;
    /* CIF state (1398, 55), (70, 35) */
    state Wait;
        /* CIF input (1351, 110), (147, 35) */
        input test_exist(my_struct);
            /* CIF task (1311, 165), (228, 35) */
            task my_bool := exist(my_struct.charge);
            /* CIF output (1367, 220), (116, 35) */
            output result(my_bool);
            /* CIF NEXTSTATE (1390, 275), (70, 35) */
            NEXTSTATE Wait;
    endstate;
    /* CIF state (890, 63), (70, 35) */
    state Wait;
        /* CIF input (833, 118), (163, 35) */
        input test_present(my_union);
            /* CIF decision (847, 173), (136, 50) */
            decision present(my_union);
                /* CIF ANSWER (821, 243), (70, 23) */
                (speed):
                    /* CIF task (795, 286), (120, 35) */
                    task my_bool := false;
                /* CIF ANSWER (951, 243), (70, 23) */
                (accel):
                    /* CIF task (927, 286), (116, 35) */
                    task my_bool := true;
            enddecision;
            /* CIF output (857, 337), (116, 35) */
            output result(my_bool);
            /* CIF NEXTSTATE (880, 392), (70, 35) */
            NEXTSTATE Wait;
    endstate;
    /* CIF state (1146, 62), (70, 35) */
    state Wait;
        /* CIF input (1095, 117), (153, 35) */
        input test_length(my_array);
            /* CIF task (1081, 172), (181, 35) */
            task my_int := length(my_array);
            /* CIF output (1108, 227), (127, 35) */
            output result_int(my_int);
            /* CIF NEXTSTATE (1137, 282), (70, 35) */
            NEXTSTATE Wait;
    endstate;
    /* CIF state (1706, 61), (70, 35) */
    state Wait;
        /* CIF input (1654, 116), (170, 35) */
        input test_to_enum(my_union);
            /* CIF task (1621, 172), (236, 35) */
            task my_union_det := present(my_union);
            /* CIF task (1590, 227), (298, 35) */
            task my_enum := to_enum(my_union_det, MyEnum);
            /* CIF output (1658, 282), (162, 35) */
            output result_enum(my_enum);
            /* CIF NEXTSTATE (1704, 337), (70, 35) */
            NEXTSTATE Wait;
    endstate;
    /* CIF state (1144, 383), (70, 35) */
    state Wait;
        /* CIF input (1081, 438), (184, 35) */
        input test_to_selector(my_enum);
            /* CIF task (1017, 493), (313, 35) */
            task my_union_det := to_selector(my_enum, MyUnion);
            /* CIF decision (1120, 548), (106, 50) */
            decision my_union_det;
                /* CIF ANSWER (1059, 618), (70, 23) */
                (speed):
                    /* CIF task (1035, 661), (116, 35) */
                    task my_bool := true;
                /* CIF ANSWER (1189, 618), (70, 23) */
                (accel):
                    /* CIF task (1163, 661), (120, 35) */
                    task my_bool := false;
            enddecision;
            /* CIF output (1115, 712), (116, 35) */
            output result(my_bool);
            /* CIF NEXTSTATE (1139, 767), (70, 35) */
            NEXTSTATE Wait;
    endstate;
    /* CIF state (1455, 699), (70, 35) */
    state Wait;
        /* CIF input (1361, 754), (254, 35) */
        input test_derived_length(my_derived_array);
            /* CIF task (1372, 809), (232, 35) */
            task my_int := length(my_derived_array);
            /* CIF output (1425, 864), (127, 35) */
            output result_int(my_int);
            /* CIF NEXTSTATE (1454, 919), (70, 35) */
            NEXTSTATE Wait;
    endstate;
    /* CIF state (1812, 700), (70, 35) */
    state Wait;
        /* CIF input (1700, 755), (290, 35) */
        input test_length_derived_fixed(my_derived_fixed);
            /* CIF task (1729, 810), (232, 35) */
            task my_int := length(my_derived_fixed);
            /* CIF output (1782, 865), (127, 35) */
            output result_int(my_int);
            /* CIF NEXTSTATE (1811, 920), (70, 35) */
            NEXTSTATE Wait;
    endstate;
endprocess Actuator;