system observer;
    /* CIF TEXT (144, 214), (507, 136) */
    use datamodel comment 'observer.asn';
    
    signal ping_in(MyInteger) renames input ping from controller to actuator;
    /* CIF ENDTEXT */
    channel c
        from env to observer with ping_in;
    endchannel;
    block observer;
        signalroute r
            from env to observer with ping_in;
        connect c and r;
        /* CIF PROCESS (259, 87), (150, 75) */
        process observer;
            /* CIF TEXT (36, 67), (256, 112) */
            monitor st System_State;
            
            monitor event Observable_Event;
            
            errorstates error;
            successstates reached;
            /* CIF ENDTEXT */
            /* CIF START (60, 255), (70, 35) */
            START;
                /* CIF NEXTSTATE (60, 310), (70, 35) */
                NEXTSTATE Idle;
            /* CIF state (740, 54), (70, 35) */
            state error;
            endstate;
            /* CIF state (970, 69), (70, 35) */
            state reached;
            endstate;
            /* CIF state (442, 233), (70, 35) */
            state Idle;
                /* CIF input (420, 288), (111, 35) */
                input ping_in(param);
                    /* CIF decision (365, 343), (222, 50) */
                    decision param = st.actuator.pong_param;
                        /* CIF ANSWER (397, 413), (70, 23) */
                        (true):
                            /* CIF NEXTSTATE (396, 456), (70, 35) */
                            NEXTSTATE reached;
                        /* CIF ANSWER (487, 413), (70, 23) */
                        (false):
                            /* CIF NEXTSTATE (487, 456), (70, 35) */
                            NEXTSTATE error;
                    enddecision;
            endstate;
        endprocess observer;
    endblock;
endsystem;