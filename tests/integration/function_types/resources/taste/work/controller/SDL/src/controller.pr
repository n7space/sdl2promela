/* CIF PROCESS (250, 150), (150, 75) */
process Controller;
    /* CIF TEXT (663, 65), (267, 173) */
    -- Text area for declarations and comments
    
    dcl test_param MyTestInteger;
    dcl up_check_param MyInteger;
    dcl down_check_param MyInteger;
    dcl up_result_param MyResultInteger;
    dcl down_result_param MyResultInteger;
    dcl up_value MyResultInteger;
    dcl down_value MyResultInteger;
    dcl error MyInteger;
    dcl reached MyInteger;
    /* CIF ENDTEXT */
    /* CIF START (435, 96), (70, 35) */
    START;
        /* CIF task (431, 151), (76, 35) */
        task error := 0;
        /* CIF task (422, 206), (94, 35) */
        task reached := 0;
        /* CIF NEXTSTATE (435, 256), (70, 35) */
        NEXTSTATE Wait;
    /* CIF state (1315, 678), (104, 35) */
    state WaitingForUp;
        /* CIF input (1274, 733), (186, 35) */
        input up_result(up_result_param);
            /* CIF task (1271, 788), (192, 35) */
            task up_value := up_result_param;
            /* CIF decision (1287, 843), (160, 50) */
            decision up_value = down_value;
                /* CIF ANSWER (1292, 913), (70, 23) */
                (true):
                    /* CIF task (1279, 956), (94, 35) */
                    task reached := 1;
                    /* CIF NEXTSTATE (1292, 1006), (70, 35) */
                    NEXTSTATE Wait;
                /* CIF ANSWER (1382, 913), (70, 23) */
                (false):
                    /* CIF task (1378, 956), (76, 35) */
                    task error := 1;
                    /* CIF NEXTSTATE (1382, 1011), (70, 35) */
                    NEXTSTATE Wait;
            enddecision;
    endstate;
    /* CIF state (1274, 412), (116, 35) */
    state WaitingForBoth;
        /* CIF input (1222, 467), (221, 35) */
        input down_result(down_result_param);
            /* CIF task (1219, 522), (227, 35) */
            task down_value := down_result_param;
            /* CIF NEXTSTATE (1281, 577), (104, 35) */
            NEXTSTATE WaitingForUp;
    endstate;
    /* CIF state (486, 404), (70, 35) */
    state Wait;
        /* CIF input (456, 459), (121, 35) */
        input test(test_param);
            /* CIF task (414, 514), (205, 35) */
            task up_check_param := test_param;
            /* CIF task (405, 569), (223, 35) */
            task down_check_param := test_param;
            /* CIF output (425, 624), (184, 35) */
            output up_check(up_check_param);
            /* CIF output (407, 679), (220, 35) */
            output down_check(down_check_param);
            /* CIF NEXTSTATE (459, 734), (116, 35) */
            NEXTSTATE WaitingForBoth;
    endstate;
    /* CIF state (984, 406), (116, 35) */
    state WaitingForBoth;
        /* CIF input (949, 461), (186, 35) */
        input up_result(up_result_param);
            /* CIF task (946, 516), (192, 35) */
            task up_value := up_result_param;
            /* CIF NEXTSTATE (982, 571), (121, 35) */
            NEXTSTATE WaitingForDown;
    endstate;
    /* CIF state (1738, 881), (121, 35) */
    state WaitingForDown;
        /* CIF input (1738, 936), (121, 35) */
        input test(test_param);
            /* CIF NEXTSTATE (1738, 991), (121, 35) */
            NEXTSTATE WaitingForDown;
    endstate;
    /* CIF state (1763, 664), (104, 35) */
    state WaitingForUp;
        /* CIF input (1755, 719), (121, 35) */
        input test(test_param);
            /* CIF NEXTSTATE (1764, 774), (104, 35) */
            NEXTSTATE WaitingForUp;
    endstate;
    /* CIF state (1765, 412), (116, 35) */
    state WaitingForBoth;
        /* CIF input (1763, 467), (121, 35) */
        input test(test_param);
            /* CIF NEXTSTATE (1766, 522), (116, 35) */
            NEXTSTATE WaitingForBoth;
    endstate;
    /* CIF state (704, 849), (70, 35) */
    state Wait;
        /* CIF input (641, 904), (186, 35) */
        input up_result(up_result_param);
            /* CIF task (696, 959), (76, 35) */
            task error := 1;
            /* CIF NEXTSTATE (700, 1014), (70, 35) */
            NEXTSTATE Wait;
    endstate;
    /* CIF state (430, 833), (70, 35) */
    state Wait;
        /* CIF input (350, 888), (221, 35) */
        input down_result(down_result_param);
            /* CIF task (423, 943), (76, 35) */
            task error := 1;
            /* CIF NEXTSTATE (426, 998), (70, 35) */
            NEXTSTATE Wait;
    endstate;
    /* CIF state (971, 686), (121, 35) */
    state WaitingForDown;
        /* CIF input (921, 741), (221, 35) */
        input down_result(down_result_param);
            /* CIF task (918, 796), (227, 35) */
            task down_value := down_result_param;
            /* CIF decision (952, 851), (160, 50) */
            decision up_value = down_value;
                /* CIF ANSWER (956, 921), (70, 23) */
                (true):
                    /* CIF task (943, 964), (94, 35) */
                    task reached := 1;
                    /* CIF NEXTSTATE (956, 1014), (70, 35) */
                    NEXTSTATE Wait;
                /* CIF ANSWER (1046, 921), (70, 23) */
                (false):
                    /* CIF task (1042, 964), (76, 35) */
                    task error := 1;
                    /* CIF NEXTSTATE (1046, 1019), (70, 35) */
                    NEXTSTATE Wait;
            enddecision;
    endstate;
endprocess Controller;