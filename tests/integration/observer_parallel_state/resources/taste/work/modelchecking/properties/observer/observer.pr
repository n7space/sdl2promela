system observer;
    /* CIF TEXT (144, 214), (461, 140) */
    use datamodel comment 'observer.asn';
    
    signal ping_in(MyInteger) renames input ping from controller to actuator;
    /* CIF ENDTEXT */
    channel c
        from env to observer with ping_in;
    endchannel;
    block observer;
        signalroute r
            from env to observer with ping_in;
        connect c and r;
        /* CIF PROCESS (259, 87), (150, 75) */
        process observer;
            /* CIF TEXT (0, 57), (222, 140) */
            monitor st System_State;
            
            monitor event Observable_Event;
            
            errorstates error;
            /* CIF ENDTEXT */
            /* CIF START (157, 226), (70, 35) */
            START;
                /* CIF NEXTSTATE (157, 281), (70, 35) */
                NEXTSTATE Idle;
            /* CIF state (266, 8), (70, 35) */
            state error;
            endstate;
            /* CIF state (713, 126), (70, 35) */
            state Idle;
                /* CIF input (691, 181), (111, 35) */
                input ping_in(param);
                    /* CIF decision (706, 236), (81, 50) */
                    decision param = 3;
                        /* CIF ANSWER (487, 306), (70, 23) */
                        (false):
                            /* CIF NEXTSTATE (487, 349), (70, 35) */
                            NEXTSTATE Idle;
                        /* CIF ANSWER (830, 306), (70, 23) */
                        (true):
                            /* CIF decision (568, 349), (592, 50) */
                            decision st.actuator.state = operation and st.actuator.operation_0_left_0_state = operation_0_left_0_add
                            /* CIF comment (1181, 356), (89, 35) */
                            comment 'check state';
                                /* CIF ANSWER (704, 424), (70, 23) */
                                (false):
                                    /* CIF NEXTSTATE (704, 467), (70, 35) */
                                    NEXTSTATE error;
                                /* CIF ANSWER (956, 424), (70, 23) */
                                (true):
                                    /* CIF task (783, 467), (414, 35) */
                                    task st.actuator.operation_0_left_0_state := operation_0_left_0_repeat
                                    /* CIF comment (1218, 467), (86, 35) */
                                    comment 'reset state';
                                    /* CIF NEXTSTATE (956, 522), (70, 35) */
                                    NEXTSTATE Idle;
                            enddecision;
                    enddecision;
            endstate;
        endprocess observer;
    endblock;
endsystem;