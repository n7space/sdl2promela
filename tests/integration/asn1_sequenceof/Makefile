SPIN?=spin
CC=gcc
CFLAGS=-O2

# We are testing the sources, not the installed application
SDL2PROMELA=PYTHONPATH=../../../ python3 -m sdl2promela.sdl2promela

RES_DIR=resources

TEST_DIR=out

CREATE_EMPTY_TEST_DIR=rm -r -f ${TEST_DIR} && mkdir -p ${TEST_DIR}
DELETE_TEST_DIR=rm -r ${TEST_DIR}

TESTS = \
	test_asn1_sequenceof

.SILENT : \
	${TESTS}

.PHONY : \
	${TESTS} \
	check

check: ${TESTS}

##############################INTEGRATION TESTS################################

# These tests are created based on the tests supplied with custom Spin version
# used by N7 Space (see github.com/n7space/Spin). Their purpose is to validate
# whether the generated Promela code actually works inside Spin.
# As sdl2promela generates only inlines (representing the SDL logic) which need
# external data and process definitions (similarly to opengeode generating
# only C functions, which need type declarations generated by asn1scc and
# glue code generated by Kazoo), they are wrapped inside "host" Promela
# files

test_asn1_sequenceof:
	echo "Test asn1_sequenceof"
	${CREATE_EMPTY_TEST_DIR}
	${SDL2PROMELA} -v -o ${TEST_DIR}/controller.pml --sdl ${RES_DIR}/taste/work/controller/SDL/src/system_structure.pr ${RES_DIR}/taste/work/controller/SDL/src/controller.pr
	${SDL2PROMELA} -v -o ${TEST_DIR}/actuator.pml --sdl ${RES_DIR}/taste/work/actuator/SDL/src/system_structure.pr ${RES_DIR}/taste/work/actuator/SDL/src/actuator.pr
	${SDL2PROMELA} -v -o ${TEST_DIR}/scl.pml --scl ${RES_DIR}/scl.txt --sdl ${RES_DIR}/taste/work/controller/SDL/src/system_structure.pr ${RES_DIR}/taste/work/controller/SDL/src/controller.pr --sdl ${RES_DIR}/taste/work/actuator/SDL/src/system_structure.pr ${RES_DIR}/taste/work/actuator/SDL/src/actuator.pr
	cp ${RES_DIR}/tmc/dataview.pml ${TEST_DIR}/dataview.pml
	cp ${RES_DIR}/tmc/system.pml ${TEST_DIR}/system.pml
	cp ${RES_DIR}/tmc/message_sizes.pml ${TEST_DIR}/message_sizes.pml
	cp ${RES_DIR}/tmc/*.h ${TEST_DIR}/
	cp ${RES_DIR}/tmc/*.c ${TEST_DIR}/
	cp ${RES_DIR}/tmc/env_inlines.pml ${TEST_DIR}/env_inlines.pml
	cd ${TEST_DIR} && \
	${SPIN} -a -m system.pml
	$(CC) -o ${TEST_DIR}/pan ${TEST_DIR}/*.c $(CFLAGS) -DNFAIR=3
	cd ${TEST_DIR} && \
	./pan -a -f -n -m1000000 > system.output
	grep -q "errors: 0" ${TEST_DIR}/system.output
	${DELETE_TEST_DIR}
