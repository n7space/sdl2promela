--------------------------------------------------------
--! File generated by asn2aadl v2.2-rf65ccdb: DO NOT EDIT !
--------------------------------------------------------
--! MadeInFastMode:True:
--! InputASN1FileChecksum:59ec5b03416d0ccb8396047498a6ff45:boolean_expressions.acn:
--! InputASN1FileChecksum:70623e9f12b5f2bb26c53e8a3106f8ff:boolean_expressions.asn:
--! InputASN1FileChecksum:ff35cd78b1e82f09b63b209ab7cf7c34:/home/taste/tool-inst/share/taste-types/taste-types.asn:
--------------------------------------------------------

package DataView

public

  with Data_Model;
  with Taste;
  with Base_Types;
  with Deployment;
DATA Simulink_Tunable_Parameter
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE_Directives";
   Type_Source_Name => "Simulink-Tunable-Parameter";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
   TASTE::Forbid_in_PI => true;
END Simulink_Tunable_Parameter;
DATA Timer
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE_Directives";
   Type_Source_Name => "Timer";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
   TASTE::Forbid_in_PI => true;
END Timer;
DATA Taste_directive
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE_Directives";
   Type_Source_Name => "Taste-directive";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
   TASTE::Forbid_in_PI => true;
END Taste_directive;

data Stream_Element_Buffer
    -- Root type for buffer elements
properties
    Data_Model::Data_Representation => Character;
end Stream_Element_Buffer;
DATA BinaryBooleanTestParam
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("boolean_expressions.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_BOOLEAN_EXPRESSIONS_DATAVIEW);
    TASTE::Ada_Package_Name => "BOOLEAN_EXPRESSIONS_DATAVIEW";
    Deployment::ASN1_Module_Name => "BOOLEAN-EXPRESSIONS-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "BinaryBooleanTestParam";
    TASTE::Position_In_File => [ line => 8 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END BinaryBooleanTestParam;

DATA IMPLEMENTATION BinaryBooleanTestParam.impl
END BinaryBooleanTestParam.impl;

DATA BinaryBooleanTestParam_Buffer_Max
END BinaryBooleanTestParam_Buffer_Max;

DATA IMPLEMENTATION BinaryBooleanTestParam_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type BinaryBooleanTestParam
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END BinaryBooleanTestParam_Buffer_Max.impl;

DATA BinaryBooleanTestParam_Buffer
END BinaryBooleanTestParam_Buffer;

DATA IMPLEMENTATION BinaryBooleanTestParam_Buffer.impl
    -- Buffer to hold a marshalled data of type BinaryBooleanTestParam
SUBCOMPONENTS
    Buffer : data BinaryBooleanTestParam_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END BinaryBooleanTestParam_Buffer.impl;

DATA MyBooleanResult
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("boolean_expressions.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_BOOLEAN_EXPRESSIONS_DATAVIEW);
    TASTE::Ada_Package_Name => "BOOLEAN_EXPRESSIONS_DATAVIEW";
    Deployment::ASN1_Module_Name => "BOOLEAN-EXPRESSIONS-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MyBooleanResult";
    TASTE::Position_In_File => [ line => 6 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aBOOLEAN;
END MyBooleanResult;

DATA IMPLEMENTATION MyBooleanResult.impl
END MyBooleanResult.impl;

DATA MyBooleanResult_Buffer_Max
END MyBooleanResult_Buffer_Max;

DATA IMPLEMENTATION MyBooleanResult_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MyBooleanResult
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END MyBooleanResult_Buffer_Max.impl;

DATA MyBooleanResult_Buffer
END MyBooleanResult_Buffer;

DATA IMPLEMENTATION MyBooleanResult_Buffer.impl
    -- Buffer to hold a marshalled data of type MyBooleanResult
SUBCOMPONENTS
    Buffer : data MyBooleanResult_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MyBooleanResult_Buffer.impl;

DATA MyInteger
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("boolean_expressions.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_BOOLEAN_EXPRESSIONS_DATAVIEW);
    TASTE::Ada_Package_Name => "BOOLEAN_EXPRESSIONS_DATAVIEW";
    Deployment::ASN1_Module_Name => "BOOLEAN-EXPRESSIONS-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MyInteger";
    TASTE::Position_In_File => [ line => 4 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END MyInteger;

DATA IMPLEMENTATION MyInteger.impl
END MyInteger.impl;

DATA MyInteger_Buffer_Max
END MyInteger_Buffer_Max;

DATA IMPLEMENTATION MyInteger_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MyInteger
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END MyInteger_Buffer_Max.impl;

DATA MyInteger_Buffer
END MyInteger_Buffer;

DATA IMPLEMENTATION MyInteger_Buffer.impl
    -- Buffer to hold a marshalled data of type MyInteger
SUBCOMPONENTS
    Buffer : data MyInteger_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MyInteger_Buffer.impl;

DATA T_Boolean
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Boolean";
    TASTE::Position_In_File => [ line => 14 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aBOOLEAN;
END T_Boolean;

DATA IMPLEMENTATION T_Boolean.impl
END T_Boolean.impl;

DATA T_Boolean_Buffer_Max
END T_Boolean_Buffer_Max;

DATA IMPLEMENTATION T_Boolean_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Boolean
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Boolean_Buffer_Max.impl;

DATA T_Boolean_Buffer
END T_Boolean_Buffer;

DATA IMPLEMENTATION T_Boolean_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Boolean
SUBCOMPONENTS
    Buffer : data T_Boolean_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Boolean_Buffer.impl;

DATA T_Int32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int32";
    TASTE::Position_In_File => [ line => 6 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_Int32;

DATA IMPLEMENTATION T_Int32.impl
END T_Int32.impl;

DATA T_Int32_Buffer_Max
END T_Int32_Buffer_Max;

DATA IMPLEMENTATION T_Int32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Int32_Buffer_Max.impl;

DATA T_Int32_Buffer
END T_Int32_Buffer;

DATA IMPLEMENTATION T_Int32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int32
SUBCOMPONENTS
    Buffer : data T_Int32_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int32_Buffer.impl;

DATA T_Int8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int8";
    TASTE::Position_In_File => [ line => 10 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_Int8;

DATA IMPLEMENTATION T_Int8.impl
END T_Int8.impl;

DATA T_Int8_Buffer_Max
END T_Int8_Buffer_Max;

DATA IMPLEMENTATION T_Int8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Int8_Buffer_Max.impl;

DATA T_Int8_Buffer
END T_Int8_Buffer;

DATA IMPLEMENTATION T_Int8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int8
SUBCOMPONENTS
    Buffer : data T_Int8_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int8_Buffer.impl;

DATA T_Null_Record
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Null-Record";
    TASTE::Position_In_File => [ line => 16 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END T_Null_Record;

DATA IMPLEMENTATION T_Null_Record.impl
END T_Null_Record.impl;

DATA T_Null_Record_Buffer_Max
END T_Null_Record_Buffer_Max;

DATA IMPLEMENTATION T_Null_Record_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Null_Record
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Null_Record_Buffer_Max.impl;

DATA T_Null_Record_Buffer
END T_Null_Record_Buffer;

DATA IMPLEMENTATION T_Null_Record_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Null_Record
SUBCOMPONENTS
    Buffer : data T_Null_Record_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Null_Record_Buffer.impl;

DATA T_UInt32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt32";
    TASTE::Position_In_File => [ line => 8 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_UInt32;

DATA IMPLEMENTATION T_UInt32.impl
END T_UInt32.impl;

DATA T_UInt32_Buffer_Max
END T_UInt32_Buffer_Max;

DATA IMPLEMENTATION T_UInt32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UInt32_Buffer_Max.impl;

DATA T_UInt32_Buffer
END T_UInt32_Buffer;

DATA IMPLEMENTATION T_UInt32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt32
SUBCOMPONENTS
    Buffer : data T_UInt32_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt32_Buffer.impl;

DATA T_UInt8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt8";
    TASTE::Position_In_File => [ line => 12 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_UInt8;

DATA IMPLEMENTATION T_UInt8.impl
END T_UInt8.impl;

DATA T_UInt8_Buffer_Max
END T_UInt8_Buffer_Max;

DATA IMPLEMENTATION T_UInt8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UInt8_Buffer_Max.impl;

DATA T_UInt8_Buffer
END T_UInt8_Buffer;

DATA IMPLEMENTATION T_UInt8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt8
SUBCOMPONENTS
    Buffer : data T_UInt8_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt8_Buffer.impl;

DATA UnaryBooleanTestParam
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("boolean_expressions.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_BOOLEAN_EXPRESSIONS_DATAVIEW);
    TASTE::Ada_Package_Name => "BOOLEAN_EXPRESSIONS_DATAVIEW";
    Deployment::ASN1_Module_Name => "BOOLEAN-EXPRESSIONS-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "UnaryBooleanTestParam";
    TASTE::Position_In_File => [ line => 19 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END UnaryBooleanTestParam;

DATA IMPLEMENTATION UnaryBooleanTestParam.impl
END UnaryBooleanTestParam.impl;

DATA UnaryBooleanTestParam_Buffer_Max
END UnaryBooleanTestParam_Buffer_Max;

DATA IMPLEMENTATION UnaryBooleanTestParam_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type UnaryBooleanTestParam
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END UnaryBooleanTestParam_Buffer_Max.impl;

DATA UnaryBooleanTestParam_Buffer
END UnaryBooleanTestParam_Buffer;

DATA IMPLEMENTATION UnaryBooleanTestParam_Buffer.impl
    -- Buffer to hold a marshalled data of type UnaryBooleanTestParam
SUBCOMPONENTS
    Buffer : data UnaryBooleanTestParam_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END UnaryBooleanTestParam_Buffer.impl;

SYSTEM Taste_DataView
END    Taste_DataView;

SYSTEM IMPLEMENTATION Taste_DataView.others
SUBCOMPONENTS
   BinaryBooleanTestParam : DATA BinaryBooleanTestParam.impl;
   MyBooleanResult : DATA MyBooleanResult.impl;
   MyInteger : DATA MyInteger.impl;
   T_Boolean : DATA T_Boolean.impl;
   T_Int32 : DATA T_Int32.impl;
   T_Int8 : DATA T_Int8.impl;
   T_Null_Record : DATA T_Null_Record.impl;
   T_UInt32 : DATA T_UInt32.impl;
   T_UInt8 : DATA T_UInt8.impl;
   UnaryBooleanTestParam : DATA UnaryBooleanTestParam.impl;
END Taste_DataView.others;
DATA ACN_BOOLEAN_EXPRESSIONS_DATAVIEW
PROPERTIES
    Source_Text => ("boolean_expressions.acn");
    Source_Language => (ACN);
END ACN_BOOLEAN_EXPRESSIONS_DATAVIEW;

end DataView;
