/* CIF PROCESS (250, 150), (150, 75) */
process Controller;
    /* CIF TEXT (657, 234), (290, 140) */
    -- Text area for declarations and comments
    
    dcl boolean_result MyBooleanResult;
    
    dcl binary_boolean BinaryBooleanTestParam;
    dcl unary_boolean UnaryBooleanTestParam;
    dcl error MyInteger;
    dcl finished MyInteger;
    /* CIF ENDTEXT */
    /* CIF START (731, 438), (70, 35) */
    START;
        /* CIF task (727, 493), (76, 35) */
        task error := 0;
        /* CIF task (718, 548), (94, 35) */
        task finished := 0;
        /* CIF task (697, 598), (136, 83) */
        task binary_boolean := {
    oper o_and,
    left false,
    right false
};
        /* CIF output (666, 701), (199, 35) */
        output check_binary(binary_boolean);
        /* CIF NEXTSTATE (721, 751), (89, 35) */
        NEXTSTATE CheckAnd1;
    /* CIF label (1073, 238), (87, 35) */
    connection goto_error:
        /* CIF task (1079, 293), (76, 35) */
        task error := 1;
        /* CIF NEXTSTATE (1082, 348), (70, 35) */
        NEXTSTATE Error;
    /* CIF End Label */
    endconnection;
    /* CIF state (2384, 1978), (108, 35) */
    state CheckImplies4;
        /* CIF input (2365, 2033), (154, 35) */
        input result(boolean_result);
            /* CIF decision (2387, 2088), (111, 50) */
            decision boolean_result;
                /* CIF ANSWER (2283, 2158), (70, 23) */
                (false):
                    /* CIF join (2300, 2201), (35, 35) */
                    join goto_error;
                /* CIF ANSWER (2457, 2158), (70, 23) */
                (true):
                    /* CIF task (2425, 2201), (132, 53) */
                    task unary_boolean := {
    expr false
};
                    /* CIF output (2395, 2274), (192, 35) */
                    output check_unary(unary_boolean);
                    /* CIF NEXTSTATE (2447, 2324), (88, 35) */
                    NEXTSTATE CheckNot1;
            enddecision;
    endstate;
    /* CIF state (1912, 1982), (108, 35) */
    state CheckImplies3;
        /* CIF input (1893, 2037), (154, 35) */
        input result(boolean_result);
            /* CIF decision (1915, 2092), (111, 50) */
            decision boolean_result;
                /* CIF ANSWER (1811, 2162), (70, 23) */
                (true):
                    /* CIF join (1828, 2205), (35, 35) */
                    join goto_error;
                /* CIF ANSWER (1985, 2162), (70, 23) */
                (false):
                    /* CIF task (1951, 2205), (136, 83) */
                    task binary_boolean := {
    oper o_implies,
    left true,
    right true
};
                    /* CIF output (1920, 2308), (199, 35) */
                    output check_binary(binary_boolean);
                    /* CIF NEXTSTATE (1965, 2363), (108, 35) */
                    NEXTSTATE CheckImplies4;
            enddecision;
    endstate;
    /* CIF state (1468, 1976), (108, 35) */
    state CheckImplies2;
        /* CIF input (1449, 2031), (154, 35) */
        input result(boolean_result);
            /* CIF decision (1471, 2086), (111, 50) */
            decision boolean_result;
                /* CIF ANSWER (1367, 2156), (70, 23) */
                (false):
                    /* CIF join (1384, 2199), (35, 35) */
                    join goto_error;
                /* CIF ANSWER (1541, 2156), (70, 23) */
                (true):
                    /* CIF task (1507, 2199), (136, 83) */
                    task binary_boolean := {
    oper o_implies,
    left true,
    right false
};
                    /* CIF output (1476, 2302), (199, 35) */
                    output check_binary(binary_boolean);
                    /* CIF NEXTSTATE (1521, 2357), (108, 35) */
                    NEXTSTATE CheckImplies3;
            enddecision;
    endstate;
    /* CIF state (992, 1975), (108, 35) */
    state CheckImplies1;
        /* CIF input (974, 2030), (154, 35) */
        input result(boolean_result);
            /* CIF decision (996, 2085), (111, 50) */
            decision boolean_result;
                /* CIF ANSWER (892, 2155), (70, 23) */
                (false):
                    /* CIF join (909, 2198), (35, 35) */
                    join goto_error;
                /* CIF ANSWER (1066, 2155), (70, 23) */
                (true):
                    /* CIF task (1032, 2198), (136, 83) */
                    task binary_boolean := {
    oper o_implies,
    left false,
    right true
};
                    /* CIF output (1001, 2301), (199, 35) */
                    output check_binary(binary_boolean);
                    /* CIF NEXTSTATE (1046, 2356), (108, 35) */
                    NEXTSTATE CheckImplies2;
            enddecision;
    endstate;
    /* CIF state (1961, 954), (81, 35) */
    state CheckOr3;
        /* CIF input (1924, 1009), (154, 35) */
        input result(boolean_result);
            /* CIF decision (1946, 1064), (111, 50) */
            decision boolean_result;
                /* CIF ANSWER (1844, 1134), (70, 23) */
                (false):
                    /* CIF join (1861, 1177), (35, 35) */
                    join goto_error;
                /* CIF ANSWER (2018, 1134), (70, 23) */
                (true):
                    /* CIF task (1984, 1177), (136, 83) */
                    task binary_boolean := {
    oper o_or,
    left true,
    right true
};
                    /* CIF output (1953, 1280), (199, 35) */
                    output check_binary(binary_boolean);
                    /* CIF NEXTSTATE (2012, 1335), (81, 35) */
                    NEXTSTATE CheckOr4;
            enddecision;
    endstate;
    /* CIF state (1513, 957), (81, 35) */
    state CheckOr2;
        /* CIF input (1476, 1012), (154, 35) */
        input result(boolean_result);
            /* CIF decision (1498, 1067), (111, 50) */
            decision boolean_result;
                /* CIF ANSWER (1395, 1137), (70, 23) */
                (false):
                    /* CIF join (1412, 1180), (35, 35) */
                    join goto_error;
                /* CIF ANSWER (1569, 1137), (70, 23) */
                (true):
                    /* CIF task (1535, 1180), (136, 83) */
                    task binary_boolean := {
    oper o_or,
    left true,
    right false
};
                    /* CIF output (1504, 1283), (199, 35) */
                    output check_binary(binary_boolean);
                    /* CIF NEXTSTATE (1563, 1338), (81, 35) */
                    NEXTSTATE CheckOr3;
            enddecision;
    endstate;
    /* CIF state (2433, 974), (81, 35) */
    state CheckOr4;
        /* CIF input (2396, 1029), (154, 35) */
        input result(boolean_result);
            /* CIF decision (2418, 1084), (111, 50) */
            decision boolean_result;
                /* CIF ANSWER (2316, 1154), (70, 23) */
                (false):
                    /* CIF join (2333, 1197), (35, 35) */
                    join goto_error;
                /* CIF ANSWER (2490, 1154), (70, 23) */
                (true):
                    /* CIF task (2456, 1197), (136, 83) */
                    task binary_boolean := {
    oper o_xor,
    left false,
    right false
};
                    /* CIF output (2425, 1300), (199, 35) */
                    output check_binary(binary_boolean);
                    /* CIF NEXTSTATE (2481, 1355), (86, 35) */
                    NEXTSTATE CheckXor1;
            enddecision;
    endstate;
    /* CIF state (1057, 945), (81, 35) */
    state CheckOr1;
        /* CIF input (1020, 1000), (154, 35) */
        input result(boolean_result);
            /* CIF decision (1042, 1055), (111, 50) */
            decision boolean_result;
                /* CIF ANSWER (938, 1125), (70, 23) */
                (true):
                    /* CIF join (955, 1168), (35, 35) */
                    join goto_error;
                /* CIF ANSWER (1112, 1125), (70, 23) */
                (false):
                    /* CIF task (1078, 1168), (136, 83) */
                    task binary_boolean := {
    oper o_or,
    left false,
    right true
};
                    /* CIF output (1047, 1271), (199, 35) */
                    output check_binary(binary_boolean);
                    /* CIF NEXTSTATE (1106, 1326), (81, 35) */
                    NEXTSTATE CheckOr2;
            enddecision;
    endstate;
    /* CIF state (1849, 426), (89, 35) */
    state CheckAnd3;
        /* CIF input (1821, 481), (154, 35) */
        input result(boolean_result);
            /* CIF decision (1843, 536), (111, 50) */
            decision boolean_result;
                /* CIF ANSWER (1741, 606), (70, 23) */
                (true):
                    /* CIF join (1758, 649), (35, 35) */
                    join goto_error;
                /* CIF ANSWER (1915, 606), (70, 23) */
                (false):
                    /* CIF task (1881, 649), (136, 83) */
                    task binary_boolean := {
    oper o_and,
    left true,
    right true
};
                    /* CIF output (1850, 752), (199, 35) */
                    output check_binary(binary_boolean);
                    /* CIF NEXTSTATE (1905, 807), (89, 35) */
                    NEXTSTATE CheckAnd4;
            enddecision;
    endstate;
    /* CIF state (1328, 241), (70, 35) */
    state Error;
        /* CIF input (1328, 296), (70, 35) */
        input *;
            /* CIF NEXTSTATE (1328, 351), (70, 35) */
            NEXTSTATE Error;
    endstate;
    /* CIF state (1455, 429), (89, 35) */
    state CheckAnd2;
        /* CIF input (1427, 484), (154, 35) */
        input result(boolean_result);
            /* CIF decision (1449, 539), (111, 50) */
            decision boolean_result;
                /* CIF ANSWER (1346, 609), (70, 23) */
                (true):
                    /* CIF join (1363, 652), (35, 35) */
                    join goto_error;
                /* CIF ANSWER (1520, 609), (70, 23) */
                (false):
                    /* CIF task (1486, 652), (136, 83) */
                    task binary_boolean := {
    oper o_and,
    left true,
    right false
};
                    /* CIF output (1455, 755), (199, 35) */
                    output check_binary(binary_boolean);
                    /* CIF NEXTSTATE (1510, 810), (89, 35) */
                    NEXTSTATE CheckAnd3;
            enddecision;
    endstate;
    /* CIF state (1063, 434), (89, 35) */
    state CheckAnd1;
        /* CIF input (1035, 489), (154, 35) */
        input result(boolean_result);
            /* CIF decision (1057, 544), (111, 50) */
            decision boolean_result;
                /* CIF ANSWER (953, 614), (70, 23) */
                (true):
                    /* CIF join (970, 657), (35, 35) */
                    join goto_error;
                /* CIF ANSWER (1127, 614), (70, 23) */
                (false):
                    /* CIF task (1093, 657), (136, 83) */
                    task binary_boolean := {
    oper o_and,
    left false,
    right true
};
                    /* CIF output (1062, 760), (199, 35) */
                    output check_binary(binary_boolean);
                    /* CIF NEXTSTATE (1117, 815), (89, 35) */
                    NEXTSTATE CheckAnd2;
            enddecision;
    endstate;
    /* CIF state (1033, 1475), (86, 35) */
    state CheckXor1;
        /* CIF input (1005, 1530), (154, 35) */
        input result(boolean_result);
            /* CIF decision (1027, 1585), (111, 50) */
            decision boolean_result;
                /* CIF ANSWER (923, 1655), (70, 23) */
                (true):
                    /* CIF join (940, 1698), (35, 35) */
                    join goto_error;
                /* CIF ANSWER (1097, 1655), (70, 23) */
                (false):
                    /* CIF task (1063, 1698), (136, 83) */
                    task binary_boolean := {
    oper o_xor,
    left false,
    right true
};
                    /* CIF output (1032, 1801), (199, 35) */
                    output check_binary(binary_boolean);
                    /* CIF NEXTSTATE (1088, 1856), (86, 35) */
                    NEXTSTATE CheckXor2;
            enddecision;
    endstate;
    /* CIF state (1912, 1475), (86, 35) */
    state CheckXor3;
        /* CIF input (1883, 1530), (154, 35) */
        input result(boolean_result);
            /* CIF decision (1905, 1585), (111, 50) */
            decision boolean_result;
                /* CIF ANSWER (1801, 1655), (70, 23) */
                (false):
                    /* CIF join (1818, 1698), (35, 35) */
                    join goto_error;
                /* CIF ANSWER (1975, 1655), (70, 23) */
                (true):
                    /* CIF task (1941, 1698), (136, 83) */
                    task binary_boolean := {
    oper o_xor,
    left true,
    right true
};
                    /* CIF output (1910, 1801), (199, 35) */
                    output check_binary(binary_boolean);
                    /* CIF NEXTSTATE (1966, 1856), (86, 35) */
                    NEXTSTATE CheckXor4;
            enddecision;
    endstate;
    /* CIF state (1421, 1478), (86, 35) */
    state CheckXor2;
        /* CIF input (1392, 1533), (154, 35) */
        input result(boolean_result);
            /* CIF decision (1414, 1588), (111, 50) */
            decision boolean_result;
                /* CIF ANSWER (1310, 1658), (70, 23) */
                (false):
                    /* CIF join (1327, 1701), (35, 35) */
                    join goto_error;
                /* CIF ANSWER (1484, 1658), (70, 23) */
                (true):
                    /* CIF task (1450, 1701), (136, 83) */
                    task binary_boolean := {
    oper o_xor,
    left true,
    right false
};
                    /* CIF output (1419, 1804), (199, 35) */
                    output check_binary(binary_boolean);
                    /* CIF NEXTSTATE (1475, 1859), (86, 35) */
                    NEXTSTATE CheckXor3;
            enddecision;
    endstate;
    /* CIF state (2410, 1478), (86, 35) */
    state CheckXor4;
        /* CIF input (2381, 1533), (154, 35) */
        input result(boolean_result);
            /* CIF decision (2403, 1588), (111, 50) */
            decision boolean_result;
                /* CIF ANSWER (2299, 1658), (70, 23) */
                (true):
                    /* CIF join (2316, 1701), (35, 35) */
                    join goto_error;
                /* CIF ANSWER (2473, 1658), (70, 23) */
                (false):
                    /* CIF task (2439, 1701), (136, 83) */
                    task binary_boolean := {
    oper o_implies,
    left false,
    right false
};
                    /* CIF output (2408, 1804), (199, 35) */
                    output check_binary(binary_boolean);
                    /* CIF NEXTSTATE (2453, 1859), (108, 35) */
                    NEXTSTATE CheckImplies1;
            enddecision;
    endstate;
    /* CIF state (2277, 425), (89, 35) */
    state CheckAnd4;
        /* CIF input (2249, 480), (154, 35) */
        input result(boolean_result);
            /* CIF decision (2271, 535), (111, 50) */
            decision boolean_result;
                /* CIF ANSWER (2169, 605), (70, 23) */
                (false):
                    /* CIF join (2186, 648), (35, 35) */
                    join goto_error;
                /* CIF ANSWER (2343, 605), (70, 23) */
                (true):
                    /* CIF task (2309, 648), (136, 83) */
                    task binary_boolean := {
    oper o_or,
    left false,
    right false
};
                    /* CIF output (2278, 751), (199, 35) */
                    output check_binary(binary_boolean);
                    /* CIF NEXTSTATE (2337, 806), (81, 35) */
                    NEXTSTATE CheckOr1;
            enddecision;
    endstate;
    /* CIF state (1021, 2456), (88, 35) */
    state CheckNot1;
        /* CIF input (990, 2511), (154, 35) */
        input result(boolean_result);
            /* CIF decision (1012, 2566), (111, 50) */
            decision boolean_result;
                /* CIF ANSWER (908, 2636), (70, 23) */
                (false):
                    /* CIF join (925, 2679), (35, 35) */
                    join goto_error;
                /* CIF ANSWER (1082, 2636), (70, 23) */
                (true):
                    /* CIF task (1050, 2679), (132, 53) */
                    task unary_boolean := {
    expr true
};
                    /* CIF output (1020, 2752), (192, 35) */
                    output check_unary(unary_boolean);
                    /* CIF NEXTSTATE (1072, 2802), (88, 35) */
                    NEXTSTATE CheckNot2;
            enddecision;
    endstate;
    /* CIF state (1530, 2466), (88, 35) */
    state CheckNot2;
        /* CIF input (1498, 2521), (154, 35) */
        input result(boolean_result);
            /* CIF decision (1520, 2576), (111, 50) */
            decision boolean_result;
                /* CIF ANSWER (1416, 2646), (70, 23) */
                (true):
                    /* CIF join (1433, 2689), (35, 35) */
                    join goto_error;
                /* CIF ANSWER (1590, 2646), (70, 23) */
                (false):
                    /* CIF task (1577, 2689), (94, 35) */
                    task finished := 1;
                    /* CIF NEXTSTATE (1580, 2744), (88, 35) */
                    NEXTSTATE CheckNot2;
            enddecision;
    endstate;
endprocess Controller;