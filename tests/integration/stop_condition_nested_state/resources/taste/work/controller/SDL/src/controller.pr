/* CIF PROCESS (250, 150), (150, 75) */
process Controller;
    /* CIF TEXT (357, 169), (267, 143) */
    -- Text area for declarations and comments
    
    dcl test_param MyTestInteger;
    
    dcl ticks MyTestInteger;
    dcl result_param MyInteger;
    dcl expected MyInteger;
    
    dcl error MyInteger;
    /* CIF ENDTEXT */
    /* CIF START (355, 31), (70, 35) */
    START;
        /* CIF NEXTSTATE (355, 81), (70, 35) */
        NEXTSTATE Wait;
    /* CIF state (1146, 211), (70, 35) */
    state Testing;
        /* CIF input (1146, 266), (70, 35) */
        input ok;
            /* CIF decision (1145, 321), (70, 50) */
            decision ticks > 1;
                /* CIF ANSWER (1101, 391), (70, 23) */
                (true):
                    /* CIF task (1079, 434), (113, 35) */
                    task ticks := ticks - 1;
                    /* CIF output (1101, 489), (70, 35) */
                    output tick;
                    /* CIF NEXTSTATE (1101, 539), (70, 35) */
                    NEXTSTATE Testing;
                /* CIF ANSWER (1206, 391), (70, 23) */
                (false):
                    /* CIF output (1206, 434), (70, 35) */
                    output reset;
                    /* CIF NEXTSTATE (1203, 489), (74, 35) */
                    NEXTSTATE Reseting;
            enddecision;
    endstate;
    /* CIF state (789, 212), (70, 35) */
    state Wait;
        /* CIF input (761, 267), (121, 35) */
        input test(test_param);
            /* CIF task (755, 322), (133, 35) */
            task ticks := test_param;
            /* CIF task (741, 377), (161, 35) */
            task expected := test_param;
            /* CIF output (787, 427), (70, 35) */
            output tick;
            /* CIF NEXTSTATE (787, 477), (70, 35) */
            NEXTSTATE Testing;
    endstate;
    /* CIF state (1407, 209), (70, 35) */
    state Testing;
        /* CIF input (1369, 264), (143, 35) */
        input result(result_param);
            /* CIF task (1403, 319), (76, 35) */
            task error := 1;
            /* CIF NEXTSTATE (1406, 374), (70, 35) */
            NEXTSTATE Wait;
    endstate;
    /* CIF state (2134, 216), (74, 35) */
    state Reseting;
        /* CIF input (2138, 271), (70, 35) */
        input ok;
            /* CIF task (2134, 326), (76, 35) */
            task error := 1;
            /* CIF NEXTSTATE (2138, 381), (70, 35) */
            NEXTSTATE Wait;
    endstate;
    /* CIF state (1769, 212), (74, 35) */
    state Reseting;
        /* CIF input (1735, 267), (144, 35) */
        input result(result_param);
            /* CIF decision (1722, 322), (169, 50) */
            decision result_param = expected;
                /* CIF ANSWER (1728, 392), (70, 23) */
                (true):
                    /* CIF NEXTSTATE (1728, 435), (70, 35) */
                    NEXTSTATE Wait;
                /* CIF ANSWER (1818, 392), (70, 23) */
                (false):
                    /* CIF task (1814, 435), (76, 35) */
                    task error := 1;
                    /* CIF NEXTSTATE (1818, 490), (70, 35) */
                    NEXTSTATE Wait;
            enddecision;
    endstate;
endprocess Controller;