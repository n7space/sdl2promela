---------------------------------------------------
-- AADL2.2
-- TASTE type interfaceview
-- 
-- generated code: do not edit
---------------------------------------------------


PACKAGE interfaceview::IV::controller
PUBLIC

WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
WITH interfaceview::IV::actuatorinst;

SUBPROGRAM PI_pong
FEATURES
    p1 : IN PARAMETER DataView::MyInteger {
       Taste::encoding => NATIVE;
    };
END PI_pong;

SUBPROGRAM IMPLEMENTATION PI_pong.others
END PI_pong.others;


SUBPROGRAM RI_ping
FEATURES
    p1 : IN PARAMETER DataView::MyInteger {
       Taste::encoding => NATIVE;
    };
END RI_ping;

SUBPROGRAM IMPLEMENTATION RI_ping.others
END RI_ping.others;



SYSTEM controller
FEATURES
   PI_pong : PROVIDES SUBPROGRAM ACCESS interfaceview::IV:: controller:: PI_pong.others {
      Taste::InterfaceName           => "pong";            
      Taste::RCMoperationKind        => sporadic;      
      -- Unrecognized property: enable_multicast => false      
      -- Unrecognized property: layer => default      
      Taste::Interface_Stack_Size    => 1024;      
      Taste::RCMperiod               => 0 ms;      
      Taste::Associated_Queue_Size   => 1;      
      Compute_Execution_Time => 0 ms .. 0 ms;      
      Taste::Interface_Priority      => 1;      
   };
   RI_ping : REQUIRES SUBPROGRAM ACCESS interfaceview::IV:: actuatorinst:: PI_ping.others {
      Taste::labelInheritance        => "true";
      Taste::InterfaceName           => "ping";            
      Taste::RCMoperationKind        => sporadic;      
      -- Unrecognized property: enable_multicast => false      
      -- Unrecognized property: layer => default      
      Taste::Interface_Stack_Size    => 1024;      
      Taste::RCMperiod               => 0 ms;      
      Taste::Associated_Queue_Size   => 1;      
      Compute_Execution_Time => 0 ms .. 0 ms;      
      Taste::Interface_Priority      => 1;      
   };
PROPERTIES
   -- ignored property: name = controller
   -- ignored property: is_type = NO
   Source_Language => (SDL);
   -- ignored property: default_implementation = default
   -- ignored property: FPGA_Configurations = 
END controller;

SYSTEM IMPLEMENTATION controller.others
END controller.others;

END interfaceview::IV::controller;



PACKAGE interfaceview::IV::actuator
PUBLIC

WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;

SUBPROGRAM PI_ping
FEATURES
    p1 : IN PARAMETER DataView::MyInteger {
       Taste::encoding => NATIVE;
    };
END PI_ping;

SUBPROGRAM IMPLEMENTATION PI_ping.others
END PI_ping.others;


SUBPROGRAM RI_pong
FEATURES
    p1 : IN PARAMETER DataView::MyInteger {
       Taste::encoding => NATIVE;
    };
END RI_pong;

SUBPROGRAM IMPLEMENTATION RI_pong.others
END RI_pong.others;



SYSTEM actuator
FEATURES
   PI_ping : PROVIDES SUBPROGRAM ACCESS interfaceview::IV:: actuator:: PI_ping.others {
      Taste::InterfaceName           => "ping";            
      Taste::RCMoperationKind        => sporadic;      
      -- Unrecognized property: enable_multicast => false      
      -- Unrecognized property: layer => default      
      Taste::Interface_Stack_Size    => 1024;      
      Taste::RCMperiod               => 0 ms;      
      Taste::Associated_Queue_Size   => 1;      
      Compute_Execution_Time => 0 ms .. 0 ms;      
      Taste::Interface_Priority      => 1;      
   };
   RI_pong : REQUIRES SUBPROGRAM ACCESS interfaceview::IV:: actuator:: RI_pong.others {
      Taste::labelInheritance        => "true";
      Taste::InterfaceName           => "pong";            
      Taste::RCMoperationKind        => sporadic;      
      -- Unrecognized property: enable_multicast => false      
      -- Unrecognized property: layer => default      
   };
PROPERTIES
   -- ignored property: name = actuator
   TASTE::Is_Component_Type => true;
   Source_Language => (SDL);
   -- ignored property: FPGA_Configurations = 
   -- ignored property: type_language = SDL
END actuator;

SYSTEM IMPLEMENTATION actuator.others
END actuator.others;

END interfaceview::IV::actuator;



PACKAGE interfaceview::IV::actuatorinst
PUBLIC

WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;
WITH interfaceview::IV::controller;

SUBPROGRAM PI_ping
FEATURES
    p1 : IN PARAMETER DataView::MyInteger {
       Taste::encoding => NATIVE;
    };
END PI_ping;

SUBPROGRAM IMPLEMENTATION PI_ping.others
END PI_ping.others;


SUBPROGRAM RI_pong
FEATURES
    p1 : IN PARAMETER DataView::MyInteger {
       Taste::encoding => NATIVE;
    };
END RI_pong;

SUBPROGRAM IMPLEMENTATION RI_pong.others
END RI_pong.others;



SYSTEM actuatorinst
FEATURES
   PI_ping : PROVIDES SUBPROGRAM ACCESS interfaceview::IV:: actuatorinst:: PI_ping.others {
      Taste::InterfaceName           => "ping";            
      Taste::RCMoperationKind        => sporadic;      
      -- Unrecognized property: enable_multicast => false      
      -- Unrecognized property: layer => default      
      Taste::Interface_Stack_Size    => 1024;      
      Taste::RCMperiod               => 0 ms;      
      Taste::Associated_Queue_Size   => 1;      
      Compute_Execution_Time => 0 ms .. 0 ms;      
      Taste::Interface_Priority      => 1;      
   };
   RI_pong : REQUIRES SUBPROGRAM ACCESS interfaceview::IV:: controller:: PI_pong.others {
      Taste::labelInheritance        => "true";
      Taste::InterfaceName           => "pong";            
      Taste::RCMoperationKind        => sporadic;      
      -- Unrecognized property: enable_multicast => false      
      -- Unrecognized property: layer => default      
      Taste::Interface_Stack_Size    => 1024;      
      Taste::RCMperiod               => 0 ms;      
      Taste::Associated_Queue_Size   => 1;      
      Compute_Execution_Time => 0 ms .. 0 ms;      
      Taste::Interface_Priority      => 1;      
   };
PROPERTIES
   -- ignored property: name = actuatorinst
   -- ignored property: is_type = NO
   TASTE_IV_Properties::is_instance_of => "actuator";
   Source_Language => (SDL);
   -- ignored property: default_implementation = default
   -- ignored property: FPGA_Configurations = 
   -- ignored property: type_language = SDL
END actuatorinst;

SYSTEM IMPLEMENTATION actuatorinst.others
END actuatorinst.others;

END interfaceview::IV::actuatorinst;


PACKAGE interfaceview::IV
PUBLIC

WITH interfaceview::IV::controller;
WITH interfaceview::IV::actuator;
WITH interfaceview::IV::actuatorinst;
WITH Taste;
WITH DataView;
WITH TASTE_IV_Properties;

SYSTEM interfaceview
PROPERTIES
   Taste::dataView     => ("DataView");
   TASTE::dataViewPath => ("DataView.aadl");
END interfaceview;

SYSTEM IMPLEMENTATION interfaceview.others
SUBCOMPONENTS
  controller : SYSTEM interfaceview::IV::controller::controller.others;
  actuator : SYSTEM interfaceview::IV::actuator::actuator.others;
  actuatorinst : SYSTEM interfaceview::IV::actuatorinst::actuatorinst.others;
CONNECTIONS
   controller_RI_ping : SUBPROGRAM ACCESS actuatorinst.PI_ping -> controller.RI_ping;
   actuatorinst_RI_pong : SUBPROGRAM ACCESS controller.PI_pong -> actuatorinst.RI_pong;
END interfaceview.others;

PROPERTIES
   Taste::dataView     => ("DataView");
   Taste::dataViewPath => ("DataView.aadl");
   Taste::coordinates  => "0 0 297000 210000";
   Taste::version      => "3.0";
END interfaceview::IV;